diff --git a/src/fluent/emitter.hpp b/src/fluent/emitter.hpp
index f5c3139..227efff 100644
--- a/src/fluent/emitter.hpp
+++ b/src/fluent/emitter.hpp
@@ -57,6 +57,7 @@ namespace fluent {
     void set_queue_limit(size_t limit);
     virtual bool emit(Message *msg);
     const std::string& errmsg() const { return this->errmsg_; }
+    virtual bool is_enabled() const = 0;
   };
 
   class InetEmitter : public Emitter {
@@ -76,6 +77,7 @@ namespace fluent {
   public:
     InetEmitter(const std::string &host, int port);
     InetEmitter(const std::string &host, const std::string &port);
+    bool is_enabled() const final { return sock_->is_connected(); }
     ~InetEmitter();
     void worker();
   };
@@ -98,6 +100,7 @@ namespace fluent {
     FileEmitter(int fd, Format fmt=MsgPack);
     ~FileEmitter();
     void worker();
+    bool is_enabled() const final { return enabled_; }
   };
 
   class QueueEmitter : public Emitter {
@@ -108,6 +111,7 @@ namespace fluent {
     ~QueueEmitter();
     void worker();
     bool emit(Message *msg);    
+    bool is_enabled() const final { return true; }
   };
   
 }
diff --git a/src/fluent/logger.hpp b/src/fluent/logger.hpp
index 4da71a8..d5e061e 100644
--- a/src/fluent/logger.hpp
+++ b/src/fluent/logger.hpp
@@ -49,12 +49,12 @@ namespace fluent {
     Logger();
     ~Logger();
 
-    void new_forward(const std::string &host, int port=24224);
-    void new_forward(const std::string &host, const std::string &port);
-    void new_dumpfile(const std::string &fname);
-    void new_dumpfile(int fd);
-    void new_textfile(const std::string &fname);
-    void new_textfile(int fd);
+    bool new_forward(const std::string &host, int port=24224);
+    bool new_forward(const std::string &host, const std::string &port);
+    bool new_dumpfile(const std::string &fname);
+    bool new_dumpfile(int fd);
+    bool new_textfile(const std::string &fname);
+    bool new_textfile(int fd);
     MsgQueue* new_msgqueue();
     Message* retain_message(const std::string &tag);
     bool emit(Message *msg);
diff --git a/src/logger.cc b/src/logger.cc
index 0434b33..13bdbe4 100644
--- a/src/logger.cc
+++ b/src/logger.cc
@@ -64,29 +64,35 @@ namespace fluent {
 #endif // _WIN32
   }
 
-  void Logger::new_forward(const std::string &host, int port) {
+  bool Logger::new_forward(const std::string &host, int port) {
     Emitter *e = new InetEmitter(host, port);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
-  void Logger::new_forward(const std::string &host, const std::string &port) {
+  bool Logger::new_forward(const std::string &host, const std::string &port) {
     Emitter *e = new InetEmitter(host, port);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
-  void Logger::new_dumpfile(const std::string &fname) {
+  bool Logger::new_dumpfile(const std::string &fname) {
     Emitter *e = new FileEmitter(fname, FileEmitter::MsgPack);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
-  void Logger::new_dumpfile(int fd) {
+  bool Logger::new_dumpfile(int fd) {
     Emitter *e = new FileEmitter(fd, FileEmitter::MsgPack);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
-  void Logger::new_textfile(const std::string &fname) {
+  bool Logger::new_textfile(const std::string &fname) {
     Emitter *e = new FileEmitter(fname, FileEmitter::Text);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
-  void Logger::new_textfile(int fd) {
+  bool Logger::new_textfile(int fd) {
     Emitter *e = new FileEmitter(fd, FileEmitter::Text);
     this->emitter_.push_back(e);
+    return e->is_enabled();
   }
   MsgQueue* Logger::new_msgqueue() {
     MsgQueue *q = new MsgQueue();
