module(
    name = "pattern_tools",
    version = "3.0.15",
    compatibility_level = 3,
)

bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_python", version = "0.31.0")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "googletest", version = "1.11.0")
bazel_dep(name = "libfluent", version = "2.8.0")
bazel_dep(name = "nlohmann_json", version = "3.8.0")
bazel_dep(name = "prometheus-cpp", version = "1.21.3")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    # We can specify the exact version.
    python_version = "3.9",
)
python.toolchain(
    configure_coverage_tool = True,
    # We can specify the exact version.
    is_default = True,
    python_version = "3.10",
)

# You can use this repo mapping to ensure that your BUILD.bazel files don't need
# to be updated when the python version changes to a different `3.9` version.
use_repo(
    python,
    python = "python_versions",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
use_repo(pip, "pypi_pattern_tools")
pip.parse(
    hub_name = "pypi_pattern_tools",
    # We need to use the same version here as in the `python.toolchain` call.
    python_version = "3.9",
    requirements_lock = "//:requirements_lock_3_9.txt",
)
pip.parse(
    hub_name = "pypi_pattern_tools",
    # We need to use the same version here as in the `python.toolchain` call.
    python_version = "3.10",
    requirements_lock = "//:requirements_lock_3_10.txt",
)
